// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © RTTTTH

//@version=5
strategy('Classical Trend Following, ', 'Classic TF', overlay=true, precision=8, default_qty_type=strategy.percent_of_equity, max_bars_back=5000)


//
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

// CORE STRATEGY RULES ==============================================================================================
//===================================================================================================================
// Classic MANAGED FUTURES V1.0========================================================================================
// simple breakout strategy with only a few bells and whistles added on top of it but used correctly it works well: 
// Long entries are only allowed if the 50-day moving average is above the 100-day moving average.
// Short entries are only allowed if the 50-day moving average is below the 100-day moving average.
// If today’s closing price is the highest close in the past 50 days, we buy.
// If today’s closing price is the lowest close in the past 50 days, we sell.
// Position sizing is volatility adjusted according to the ATR-based formula previously shown, with a
// risk factor of 20 basis points.
// A long position is closed when it has moved three ATR units down from its highest closing price
// since the position was opened.
// A short position is closed when it has moved three ATR units up from its lowest closing price since
// the position was opened.
// The investment universe consists of the CMC 100
//===================================================================================================================
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

// Colors ===========================================================================================================
MyGreenRaw = color.new(#00FF00, 0)
MyGreenMedium = color.new(#00FF00, 30)
MyGreenSemiDark = color.new(#00FF00, 50)
MyGreenDark = color.new(#00FF00, 70)
MyGreenDarkDark = color.new(#00FF00, 80)
MyGreenDarkDarkDark = color.new(#00FF00, 88)
MyRedRaw = color.new(#FF0000, 0)
MyRedMedium = color.new(#FF0000, 25)
MyRedSemiDark = color.new(#FF0000, 50)
MyRedDark = color.new(#FF0000, 60)
MyRedDarkDark = color.new(#FF0000, 75)
MyRedDarkDarkDark = color.new(#FF0000, 90)
MyYellowRaw = color.new(color.yellow, 0)
MyYellowMedium = color.new(color.yellow, 25)
MyYellowSemiDark = color.new(color.yellow, 50)
MyYellowDark = color.new(color.yellow, 70)
MyFuchsiaRaw = color.new(color.fuchsia, 0)
MyFuchsiaMedium = color.new(color.fuchsia, 30)
MyFuchsiaSemiDark = color.new(color.fuchsia, 45)
MyFuchsiaDark = color.new(color.fuchsia, 60)
MyBlueRaw = color.new(#4985E7, 0)
MyBlueMedium = color.new(#4985E7, 20)
MyBlueDark = color.new(#4985E7, 55)
MyOrangeRaw = color.new(#FF9800, 0)
MyOrangeMedium = color.new(#FF9800, 30)
MyOrangeDark = color.new(#FF9800, 45)
MyPurpleRaw = color.new(#6123db, 0)
MyPurpleMedium = color.new(#6123db, 30)
MyPurpleDark = color.new(#6123db, 65)
MyGreenBackGround = color.new(#00FF00, 91)
MyRedBackGround = color.new(#FF0000, 90)
//
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒

//INPUTS=============================================================================================================
_10 = input(false, '══════════ Strategy Input ═════════')
leverage = input.int(10, title='Trade Leverage', group='Strategy', inline='Trades')
acctSize = input.int(1000000, title='Account Size', group='Strategy', inline='Trades')
longTradesEnabled = input.bool(title='Long Trades', defval=true, group='Strategy', inline='Trades')
shortTradesEnabled = input.bool(title='Short Trades', defval=true, group='Strategy', inline='Trades', tooltip='Enable long/short trades.')
enableTakeProfitTrailing = input.bool(defval=true, title='Enable Trailing', group='Take Profit', tooltip='Enable or disable the trailing for take profit.')

_14 = input(false, '══════════ Stop Loss Input ═════════')
enableStopLossTrailing = input.string(defval='ON', title='Enable Trailing', options=['TP', 'ON', 'OFF'], group='Stop Loss', tooltip='Enable the trailing for stop loss when Take Profit order is exewcuted or from the start of the entry order or not at all.')
longTrailingStopLossPerc1 = input.float(defval=30, title='Long/Short Stop Loss %', minval=0.1, maxval=100, step=0.1, inline='Trailing Stop Loss Perc', group='Stop Loss') / 100
shortTrailingStopLossPerc1 = input.float(defval=30, title='', minval=0.1, maxval=100, step=0.1, inline='Trailing Stop Loss Perc', group='Stop Loss', tooltip='The percentage of the price decrease/increase to set the stop loss price target for long/short positions.') / 100

_15 = input(false, '══════════ Backtest Period Input ═════════')
fromDate = input.time(defval=timestamp('01 Jan 1970 00:00 UTC'), title='From Date', group='Backtest Period')  // backtest start date
toDate = input.time(defval=timestamp('04 Aug 2121 23:59 UTC'), title='To Date', group='Backtest Period')  // backtest finish date

_16 = input(false, '══════════ Show Plot Input ═════════')
showDate = input.bool(defval=true, title='Show Backtest Range', group='Plot', tooltip='Gray out the backround of the backtest period.')

isWithinBacktestPeriod() =>
    time >= fromDate and time <= toDate ? true : false  // create function "within window of time"

// ———————————————————— Breakout Parameters
length1 = 50
len2 = 50
dc_SRCl = low
dc_SRCu = high
buySignal_src = high
sellSignal_src = low

// ———————————————————— MAs
MA1 = ta.ema(close, 25)
MA2 = ta.ema(close, 50)

// ———————————————————— DC
lower1 = ta.lowest(dc_SRCl, length1)
upper1 = ta.highest(dc_SRCu, length1)
u1 = plot(upper1, 'Channel Upper', color=color.new(#0094FF, 0))
l1 = plot(lower1, 'Channel Lower', color=color.new(#0094FF, 0))
up1 = ta.highest(high, length1)
down1 = ta.lowest(low, length1)
buySignal1 = buySignal_src == upper1[1] or ta.crossover(buySignal_src, upper1[1])
sellSignal1 = sellSignal_src == lower1[1] or ta.crossover(lower1[1], sellSignal_src)

// ———————————————————— Entry Rules
longCondition1 = buySignal1 and MA1 >= MA2 and strategy.position_size <= 0
shortCondition1 = sellSignal1 and MA1 <= MA2 and strategy.position_size >= 0


// ———————————————————— Position Size
// Variables
risk = 0.02
v = ta.atr(20)
tick = syminfo.mintick
pval = syminfo.pointvalue
nomAcc = leverage * acctSize

// Nominal Position Size (contracts)
nominal_position_size = risk * nomAcc / (v * pval)

// ———————————————————— Trailing Volatility Stop
// Variable ATR
Atr(p) =>
    atr = 0.0
    Tr = math.max(high, close[1]) - math.min(low, close[1])
    atr := nz(atr[1] + (Tr - atr[1]) / p, Tr)
    atr

//Covariance(x,y,p) => Sma(x*y,p) - Sma(x,p)*Sma(y,p)
vol_mult = input.float(10, 'ATR SL Multiplier')
position = strategy.position_size
isLong = position > 0
isShort = position < 0

float life_long = 0.0
life_long := ta.barssince(longCondition1)
float life_short = 0.0
life_short := ta.barssince(shortCondition1)

// Functions for HH and LL of a variable series
highest_(values, length) =>
    h_val = values[0]
    h_indx = 0
    if length >= 1
        for i = 0 to length - 1 by 1
            if not na(values[i]) and values[i] > h_val
                h_indx := i
                h_val := values[i]
                h_val
    h_val
float lnum = na
lnum := nz(highest_(high, ta.barssince(longCondition1)), ta.highest(high, 20))
float CT_HH = na
//CT_HH := nz(highest_(high, barssince(longCondition2)), atr(20))

lowest_(values, length) =>
    l_val = values[0]
    l_indx = 0
    if length >= 1
        for i = 0 to length - 1 by 1
            if not na(values[i]) and values[i] < l_val
                l_indx := i
                l_val := values[i]
                l_val
    l_val
float snum = na
snum := nz(lowest_(low, ta.barssince(shortCondition1)), ta.lowest(low, 20))

float CT_LL = na
//CT_LL := nz(lowest_(low, barssince(shortCondition2)), atr(20))

vol_long = vol_mult * Atr(life_long)
vol_short = vol_mult * Atr(life_long)

vol_sl_long = lnum - vol_long
vol_sl_short = snum + vol_short

plot(vol_sl_long, 'Volatility Based Stop Loss - Long', display=display.none)
plot(vol_sl_short, 'Volatility Based Stop Loss - Short', display=display.none)

// Exit Rules
vol_longExit = ta.crossunder(low, vol_sl_long)
vol_shortExit = ta.crossover(high, vol_sl_short)

//
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
// STRATEGY LOGIC ===================================================================================================


bool startLongDeal1 = longCondition1
bool startShortDeal1 = shortCondition1

bool closeLongDeal1 = startShortDeal1
bool closeShortDeal1 = startLongDeal1

bool longIsActive1 = startLongDeal1 or strategy.position_size > 0 and not closeLongDeal1
bool shortIsActive1 = startShortDeal1 or strategy.position_size < 0 and not closeShortDeal1


// determine trailing stop loss price. Trailing starts when the take profit price is reached
bool enableLongTakeProfitTrailing = enableStopLossTrailing == 'ON'

float longTrailingStopLossPrice1 = na
longTrailingStopLossPrice1 := if longTradesEnabled and isWithinBacktestPeriod() and longIsActive1
    stopValue1 = (startLongDeal1 ? close : enableLongTakeProfitTrailing ? high : strategy.position_avg_price) * (1 - longTrailingStopLossPerc1)
    math.max(stopValue1, nz(longTrailingStopLossPrice1[1]))
else
    na

bool enableShortTakeProfitTrailing = enableStopLossTrailing == 'ON'

float shortTrailingStopLossPrice1 = na
shortTrailingStopLossPrice1 := if shortTradesEnabled and isWithinBacktestPeriod() and shortIsActive1
    stopValue1 = (startShortDeal1 ? close : enableShortTakeProfitTrailing ? low : strategy.position_avg_price) * (1 + shortTrailingStopLossPerc1)
    math.min(stopValue1, nz(shortTrailingStopLossPrice1[1], 999999.9))
else
    na


//
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
// STRATEGY EXECUTION ===============================================================================================

if longTradesEnabled and isWithinBacktestPeriod()
    // getting into LONG positions
    if longCondition1
        strategy.entry('Long', strategy.long, qty=nominal_position_size, comment='L')
    // close on trend reversal
    if vol_longExit
        strategy.close('Long', qty_percent=100)
    strategy.exit(id='Long Stop Loss', from_entry='Long', qty_percent=100, stop=longTrailingStopLossPrice1, when=longIsActive1, alert_message='Long(' + syminfo.ticker + '): Stop Loss activated')

if shortTradesEnabled and isWithinBacktestPeriod()
    // getting into SHORT position
    if shortCondition1
        strategy.entry('Short', strategy.short, qty=nominal_position_size, comment='S')
    // close on trend reversal
    if vol_shortExit
        strategy.close('Short', qty_percent=100)
    strategy.exit(id='Short Stop Loss', from_entry='Short', qty_percent=100, stop=shortTrailingStopLossPrice1, when=shortIsActive1, alert_message='Short(' + syminfo.ticker + '): Stop Loss activated')

//
// ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
// PLOT DATE POSITION MA AND TRAILING TAKE PROFIT STOP LOSS =========================================================

bgcolor(color=showDate and isWithinBacktestPeriod() ? color.new(color.gray, 90) : na, transp=90)


plot(series=strategy.position_avg_price, title='Position', color=color.new(color.blue, 0), linewidth=2, style=plot.style_linebr, display=display.none)
plot(series=longTrailingStopLossPrice1, title='Long Trail Stop', color=color.new(color.fuchsia, 0), linewidth=2, style=plot.style_linebr, offset=1, display=display.none)
plot(series=shortTrailingStopLossPrice1, title='Short Trail Stop', color=color.new(color.fuchsia, 0), linewidth=2, style=plot.style_linebr, offset=1, display=display.none)

// ==================================================================================================================

